{"version":3,"sources":["store/global.js","constants.js","component/hooks/ToggleTheme.jsx","component/hooks/index.jsx","styled/header.jsx","component/hooks/GetTheme.jsx","request/index.js","component/instance/AddInstance.jsx","request/instance.js","layout/add/index.jsx","layout/theme.jsx","component/hooks/GetTitle.jsx","layout/header.jsx","component/hooks/SetTitle.jsx","layout/instance/instances.jsx","layout/instance/index.jsx","request/data.js","component/code-editor/CodeEditor.jsx","component/data/AddData.jsx","layout/data/index.jsx","App.js","serviceWorker.js","styled/GlobalColors.jsx","styled/GlobalStyles.jsx","index.js"],"names":["defaultValue","theme","localStorage","getItem","breadcrumb","title","GlobalStore","createContext","reducer","state","action","type","payload","StoreProvider","props","useReducer","store","dispatch","Provider","value","children","ToggleTheme","useContext","useEffect","document","body","classList","forEach","cur","remove","add","setItem","Hooks","Fragment","StyledHeader","styled","header","bootstrap","div","GetTheme","client","axios","create","baseURL","AddInstance","open","setOpen","useState","name","setName","uri","setUri","loading","args","data","post","stringify","then","response","status","message","success","error","catch","e","finally","AddInstanceRequest","Modal","onClose","style","width","dimmer","as","attached","textAlign","Form","padding","Grid","columns","GridColumn","Input","required","label","placeholder","onChange","event","target","margin","Button","fluid","color","content","onClick","Add","openNewInstance","setOpenNewInstance","Dropdown","trigger","Icon","icon","pointing","Menu","Item","text","Theme","description","map","_theme","key","onMouseEnter","empty","circular","GetTitle","Header","className","to","exact","disabled","rel","href","float","SetTitle","Instances","instances","setInstances","total","setTotal","setLoading","get","length","FindAllInstances","Table","celled","striped","Row","HeaderCell","Body","i","Cell","collapsing","replace","size","basic","Link","instance","callback","delete","Instance","marginTop","height","Column","path","component","AddDataRequest","node","Wrapper","CodeEditor","id","force","language","ref","useRef","options","monaco","createModel","model","editor","setEditor","current","setModelLanguage","setValue","onDidChangeModelContent","getValue","dispose","AddData","setkey","Data","useParams","setPath","setData","FindNodes","setKey","openNewData","setOpenNewData","useDebouncedCallback","autoSearch","link","divided","List","selection","verticalAlign","d","setTimeout","Content","marginRight","DeleteDataRequest","Layout","main","App","Boolean","window","location","hostname","match","GlobalColors","createGlobalStyle","GlobalStyle","span","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"oOAIaA,EAAe,CAGxBC,MAAOC,aAAaC,QCJH,SDIoBD,aAAaC,QCJjC,SDIkD,SACnEC,WAAY,GACZC,MAAO,YAGEC,EAAcC,wBAAcP,GAEnCQ,EAAU,SAACC,EAAOC,GAEpB,OAAOA,EAAOC,MACV,IAAK,QACD,OAAO,2BAAIF,GAAX,IAAkBR,MAAOS,EAAOE,UAEpC,IAAK,QACD,OAAO,2BAAIH,GAAX,IAAkBJ,MAAOK,EAAOE,UACpC,QACI,OAAO,2BAAIH,GAAUC,EAAOE,WAazBC,EARO,SAAAC,GAAU,IAAD,EACDC,qBAAWP,EAASR,GADnB,mBACpBgB,EADoB,KACbC,EADa,KAE3B,OACI,kBAACX,EAAYY,SAAb,CAAsBC,MAAK,2BAAMH,GAAN,IAAaC,cACnCH,EAAMM,WERJC,EAdK,WAAO,IAEjBpB,EAAUqB,qBAAWhB,GAArBL,MAUR,OARAsB,qBAAU,WACRC,SAASC,KAAKC,UAAUC,SACtB,SAAAC,GAAG,OAAIJ,SAASC,KAAKC,UAAUG,OAAO,CAACD,OAEzCJ,SAASC,KAAKC,UAAUI,IAAI7B,GAC5BC,aAAa6B,QDhBI,QCgBW9B,KAC3B,CAACA,IAEG,MCLM+B,EAPD,WACZ,OACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,EAAD,Q,89ECGC,IAAMC,EAAeC,IAAOC,OAAV,KAOT,SAAAtB,GAAK,OAAIA,EAAMuB,UAAY,OAAS,WACxC,SAAAvB,GAAK,OAAIA,EAAMuB,UAAY,QAAU,0BACtC,SAAAvB,GAAK,OAAIA,EAAMuB,UAAY,SAAW,WAChC,SAAAvB,GAAK,OAAIA,EAAMuB,UAAY,6BAA+B,OAG3D,SAAAvB,GAAK,OAAIA,EAAMuB,UAAY,OAAS,8BAGrC,SAAAvB,GAAK,OAAIA,EAAMuB,UAAY,QAAU,qBAKtC,SAAAvB,GAAK,OAAIA,EAAMuB,UAAY,QAAU,0BAEpC,SAAAvB,GAAK,OAAIA,EAAMuB,UAAY,QAAU,qBAEjC,SAAAvB,GAAK,OAAIA,EAAMuB,UAAY,QAAU,0B,GAuCxBF,IAAOG,IAAV,KAYIH,IAAOG,IAAV,KAmBOH,IAAOG,IAAV,KASAH,IAAOG,IAAV,K,sEC1GhBC,EALE,WAGf,OADkBjB,qBAAWhB,GAArBL,O,SCTGuC,E,OAASC,EAAMC,OAC1B,CACEC,QAAS,S,0BCuEEC,EA1DK,SAAC9B,GAAW,IAEvB+B,EAAiB/B,EAAjB+B,KAAMC,EAAWhC,EAAXgC,QAFgB,EAILC,mBAAS,MAJJ,mBAItBC,EAJsB,KAIhBC,EAJgB,OAMPF,mBAAS,MANF,mBAMtBG,EANsB,KAMjBC,EANiB,OAQCJ,mBAAS,MARV,mBAQtBK,EARsB,KAWvBC,GAXuB,KAWhB,CACXL,OAAME,QAGFpB,EAAM,YCZoB,SAACwB,EAAMR,GAEvCN,EAAOe,KAAK,kBAAmBC,oBAAUF,IACtCG,MAAK,SAAAC,GAAc,IACVJ,EAASI,EAATJ,KACJA,EAAKK,QACPC,IAAQC,QAAQ,sBAEhBf,GAAQ,IAERc,IAAQE,MAAMR,EAAKM,YAGpBG,OAAO,SAAAC,OACTC,SAAQ,eDDTC,CAAmBb,EAAMP,IAK3B,OAEI,kBAACqB,EAAA,EAAD,CACEtB,KAAMA,EACNuB,QAAS,kBAAMtB,GAAQ,IACvBuB,MAAO,CAACC,MAAO,SACfC,OAAO,YAEP,kBAAC,IAAD,CAAQC,GAAG,KAAKC,SAAS,MAAMC,UAAU,UAAzC,iBAII,kBAACC,EAAA,EAAD,CAAMN,MAAO,CAACO,QAAS,QAASxB,QAASA,GACvC,kBAACyB,EAAA,EAAD,CAAMC,QAAQ,SACZ,kBAACC,EAAA,EAAD,CAAYT,MAAO,IACrB,kBAACK,EAAA,EAAKK,MAAN,CACIC,UAAQ,EACRC,MAAM,QAAQC,YAAY,yBAAyBxE,KAAK,OACxDQ,MAAO6B,EAAMoC,SAAU,SAAAC,GAAK,OAAIpC,EAAQoC,EAAMC,OAAOnE,UACzD,kBAACwD,EAAA,EAAKK,MAAN,CAAYE,MAAM,cAAcC,YAAY,4DAChChE,MAAO+B,EAAKkC,SAAU,SAAAC,GAAK,OAAIlC,EAAOkC,EAAMC,OAAOnE,YAG/D,kBAAC,IAAD,CAASkD,MAAO,CAACkB,OAAQ,mBAEzB,kBAACC,EAAA,EAAD,CACMC,OAAK,EAELC,MAAOnD,IAAYoD,QAAQ,MAAMC,QAAS,kBAAM9D,UE3BrD+D,EA7BH,WAAO,IAAD,EAE8B9C,oBAAS,GAFvC,mBAET+C,EAFS,KAEQC,EAFR,KAIhB,OACE,kBAAC,IAAM9D,SAAP,KACE,kBAAC+D,EAAA,EAAD,CAEEC,QACE,kBAACC,EAAA,EAAD,CACE7F,MAAM,MACN2C,KAAK,aACLqB,MAAO,CAACkB,OAAQ,KAGpBY,KAAM,KACNC,SAAS,YAET,kBAACJ,EAAA,EAASK,KAAV,KACE,kBAACL,EAAA,EAASM,KAAV,CAAeV,QAAS,kBAAMG,GAAmB,IAClCI,KAAK,cAAcI,KAAK,gBAI1CT,GAAmB,kBAAC,EAAD,CAAajD,KAAMiD,EAAiBhD,QAASiD,M,QCqBxDS,EA7CD,WAAO,IAEXvF,EAAaK,qBAAWhB,GAAxBW,SAiBR,OACE,kBAAC+E,EAAA,EAAD,CACEC,QACE,kBAACC,EAAA,EAAD,CACElD,KAAK,MACL3C,MAAM,eACNgE,MAAO,CAACkB,OAAQ,KAGpBY,KAAM,KACNC,SAAS,aAET,kBAACJ,EAAA,EAASK,KAAV,KA1BW,CACb,CAACX,MAAM,MAAOe,YAAY,OAC1B,CAACf,MAAM,SAAUe,YAAY,UAC7B,CAACf,MAAM,SAAUe,YAAY,UAC7B,CAACf,MAAM,QAASe,YAAY,SAC5B,CAACf,MAAM,QAASe,YAAY,SAC5B,CAACf,MAAM,OAAQe,YAAY,QAC3B,CAACf,MAAM,SAAUe,YAAY,UAC7B,CAACf,MAAM,SAAUe,YAAY,UAC7B,CAACf,MAAM,OAAQe,YAAY,QAC3B,CAACf,MAAM,QAASe,YAAY,SAC5B,CAACf,MAAM,OAAQe,YAAY,SAiBdC,KAAI,SAAAC,GAAM,OAAI,kBAACX,EAAA,EAASM,KAAV,CACjBM,IAAKD,EAAOjB,MACZa,KAAMI,EAAOF,YACbI,aAAc,kBAjCX5G,EAiCwB0G,EAAOjB,MAjCrBzE,EAAS,CAAEN,KAAM,QAASC,QAASX,IAA7C,IAAAA,GAkCHiF,MAAQ,CAAEQ,MAAOiB,EAAOjB,MAAOoB,OAAO,EAAMC,UAAU,WCjCrDC,EALE,WAGf,OADkB1F,qBAAWhB,GAArBD,OC+CK4G,EAxCA,SAACnG,GAEd,IAAMT,EAAQ2G,IAEZ,OACI,kBAAC9E,EAAD,KAEE,yBAAKgF,UAAU,QACb,kBAAC,IAAD,CAASC,GAAG,YAAYC,OAAO,GAA/B,cACA,kBAAC,IAAD,CAASzG,KAAK,WAAW0D,MAAO,CAACkB,OAAQ,YACzC,kBAAC,IAAD,CAAS4B,GAAG,QAAQC,OAAO,EAAOC,UAAQ,GAA1C,gBAEF,yBAAKH,UAAU,UAEX,kBAAC,IAAD,KAAO7G,IAGX,yBAAK6G,UAAU,SAGT,kBAAC,IAAD,CAASvG,KAAK,WAAW0D,MAAO,CAACkB,OAAQ,mBAEzC,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAS5E,KAAK,WAAW0D,MAAO,CAACkB,OAAQ,YAEzC,kBAAC,EAAD,MAEA,kBAAC,IAAD,CAAS5E,KAAK,WAAW0D,MAAO,CAACkB,OAAQ,YAE7C,uBAAGD,OAAO,SAASgC,IAAI,sBACpBC,KAAM,oCACNlD,MAAO,CAACmD,MAAO,UAChB,kBAACtB,EAAA,EAAD,CAAMlD,KAAK,e,SC5BVyE,EAZE,SAACpH,GAEdmB,SAASnB,MAAT,UAAoBA,EAAQA,EAAQ,MAAQ,GAA5C,yCAFwB,IAIjBY,EAAYK,qBAAWhB,GAAvBW,SAGPM,qBAAU,WAENN,EAAS,CAAEN,KAAM,QAASC,QADVP,MAElB,CAACY,EAAUZ,KC0CFqH,EAhDG,SAAC5G,GAEf2G,EAAS,kBAFgB,MNkDG,WAAO,IAAD,EAEF1E,mBAAS,IAFP,mBAE7B4E,EAF6B,KAElBC,EAFkB,OAGV7E,mBAAS,IAHC,mBAG7B8E,EAH6B,KAGtBC,EAHsB,OAIN/E,oBAAS,GAJH,mBAI7BK,EAJ6B,KAIpB2E,EAJoB,KAqBpC,OAfAxG,qBAAU,WACL6B,GACDZ,EAAOwF,IAAP,oBAA+BvE,MAAK,SAAAC,GAAa,IACxCJ,EAAQI,EAARJ,KACHA,EAAKK,QACPmE,EAASxE,EAAKuE,OACdD,EAAatE,EAAKA,MAClBM,IAAQC,QAAR,gBAAyBP,EAAKA,KAAK2E,OAAnC,aAEArE,IAAQE,MAAMR,EAAKM,YAEpBK,YAEJ,CAACb,IAEG,CAACuE,EAAWE,EAAOzE,EAAS2E,GMnEeG,GAJvB,mBAIlBP,EAJkB,KAISI,GAJT,gBAOzB,OACI,kBAAClD,EAAA,EAAD,KACE,kBAACsD,EAAA,EAAD,CAAOC,QAAM,EAACC,SAAO,GACnB,kBAACF,EAAA,EAAMlB,OAAP,KACE,kBAACkB,EAAA,EAAMG,IAAP,KACE,kBAACH,EAAA,EAAMI,WAAP,CAAkBjE,MAAM,KAAxB,QACA,kBAAC6D,EAAA,EAAMI,WAAP,CAAkBjE,MAAM,KAAxB,YACA,kBAAC6D,EAAA,EAAMI,WAAP,CAAkBjE,MAAM,KAAxB,UACA,kBAAC6D,EAAA,EAAMI,WAAP,CAAkBjE,MAAM,KAAxB,eAIJ,kBAAC6D,EAAA,EAAMK,KAAP,KAEIb,EAAUjB,KAAI,SAAA+B,GAAC,OAAW,kBAACN,EAAA,EAAMG,IAAP,KACxB,kBAACH,EAAA,EAAMO,KAAP,CAAYC,YAAU,GACpB,kBAAC,IAAD,CAAMxB,GAAE,gBAAWsB,EAAEtH,MAAM+B,IAAI0F,QAAQ,MAAO,OAC9C,kBAAC1C,EAAA,EAAD,CAAMlD,KAAK,WADX,IACwByF,EAAEtH,MAAM6B,OAGlC,kBAACmF,EAAA,EAAMO,KAAP,KAAaD,EAAEtH,MAAM+B,KACrB,kBAACiF,EAAA,EAAMO,KAAP,qBAGA,kBAACP,EAAA,EAAMO,KAAP,CAAYhE,UAAU,UACpB,kBAACc,EAAA,EAAD,CAAQqD,KAAK,OAAOC,OAAK,EACjBtE,GAAIuE,IAAM5B,GAAE,gBAAWsB,EAAEtH,MAAM+B,IAAI0F,QAAQ,MAAO,OAD1D,YAEA,kBAACpD,EAAA,EAAD,CAAQqD,KAAK,OAAOC,OAAK,EAACpD,MAAO,MAAOlB,GAAG,IAAIoB,QAAS,kBNuCtCoD,EMtCMP,EAAEtH,MAAM+B,IAAI0F,QAAQ,MAAO,KNsCvBK,EMrCxB,kBAAMlB,GAAW,SNuCvCvF,EAAO0G,OAAP,0BAAiCF,IAC9BvF,MAAK,SAAAC,GAAa,IACVJ,EAAQI,EAARJ,KACHA,EAAKK,QACPC,IAAQC,QAAQ,wBAChBoF,GAAYA,KAEZrF,IAAQE,MAAMR,EAAKM,YAGpBG,OAAM,SAAAC,OACRC,SAAQ,eAbwB,IAAC+E,EAAUC,IMvC5B,qBClBLE,EAlBE,SAACrI,GAGd,OACI,kBAAC+D,EAAA,EAAD,CAAMC,QAAQ,QAAQT,MAAO,CAAC+E,UAAW,GAAIC,OAAQ,SACnD,kBAACxE,EAAA,EAAKyE,OAAN,CAAahF,MAAO,IACpB,kBAACO,EAAA,EAAKyE,OAAN,CAAahF,MAAO,IAClB,kBAAC,IAAD,CAAOiF,KAAK,YAAYC,UAAW9B,EAAWN,OAAO,KAGvD,kBAACvC,EAAA,EAAKyE,OAAN,CAAahF,MAAO,M,kBCCjBmF,EAAiB,SAACC,EAAMT,GAiBnC,OAfAzG,EAAOe,KAAK,cAAeC,oBAAUkG,IAClCjG,MAAK,SAAAC,GAAc,IACVJ,EAASI,EAATJ,KACJA,EAAKK,QACPC,IAAQC,QAAQ,sBAChBoF,GAAYA,KAEZrF,IAAQE,MAAMR,EAAKM,YAGpBG,OAAO,SAAAC,OACTC,SAAQ,eAIJ,M,wLC3BT,IAAM0F,EAAUxH,IAAOG,IAAV,KAqEEsH,GA7DI,SAAC9I,GAAW,IAEpBK,EAA8BL,EAA9BK,MAAOiE,EAAuBtE,EAAvBsE,SAAUyE,EAAa/I,EAAb+I,GAAIC,EAAShJ,EAATgJ,MACtBC,EAAWjJ,EAAMiJ,SAAWjJ,EAAMiJ,SAAW,aAC7CC,EAAMC,iBAAO,MACb5F,EAAQvD,EAAMuD,MAAQvD,EAAMuD,MAAS,GACrC6F,EAAUpJ,EAAMoJ,QAAUpJ,EAAMoJ,QAAW,GANvB,EAOAnH,mBAASoH,IAAcC,YAAYjJ,EAAO4I,IAP1C,mBAOnBM,EAPmB,aAQEtH,mBAAS,OARX,mBAQnBuH,EARmB,KAQXC,EARW,KAwD1B,OA9CAhJ,qBAAU,WACHyI,EAAIQ,SAEHD,EACEJ,IAAczH,OAAOsH,EAAIQ,QAAzB,aACIH,QAAON,WAAU9J,MAAO,WAAciK,OAKjD,CAACF,EAAKK,EAAON,IAGhBxI,qBAAU,WACF+I,GAAUA,EAAOG,kBACjBH,EAAOG,iBAAiBJ,EAAON,KAEpC,CAACO,EAAQP,EAAUM,IAGtB9I,qBAAU,WAIH+I,GAAUR,GACTO,EAAMK,SAASvJ,KAKpB,CAACA,EAAO2I,EAAOO,IAKlB9I,qBAAU,WACH+I,GACCA,EAAOK,yBAAwB,SAACtF,GAAD,OAAWD,GAAYA,EAASiF,EAAMO,iBAE1E,CAACN,IAGJ/I,qBAAU,WACN,OAAO,kBAAM8I,EAAMQ,aACpB,IAGD,kBAAClB,EAAD,CAASE,GAAIA,GAAU,SAAUG,IAAKA,EAAK3F,MAAOA,KCezCyG,GA1EC,SAAChK,GAAW,IAEnBoC,EAAOpC,EAAPoC,IAGAL,EAAiB/B,EAAjB+B,KAAMC,EAAWhC,EAAXgC,QALY,EAOHC,mBAAS,MAPN,mBAOlB6D,EAPkB,KAObmE,EAPa,OASChI,mBAAS,4BATV,mBASlB5B,EATkB,KASXuJ,EATW,OAWK3H,mBAAS,MAXd,mBAWlBK,EAXkB,KAcnBC,GAdmB,KAcZ,CACXuD,MAAKzF,QAAO+B,QAUd,OAEI,kBAACiB,EAAA,EAAD,CACEtB,KAAMA,EACNuB,QAAS,kBAAMtB,GAAQ,IACvBuB,MAAO,CAACC,MAAO,UACfC,OAAO,YAEP,kBAAC,IAAD,CAAQC,GAAG,KAAKC,SAAS,MAAMC,UAAU,UAAzC,YAME,kBAACC,EAAA,EAAD,CAAMN,MAAO,CAACO,QAAS,QAASxB,QAASA,GACvC,kBAACuB,EAAA,EAAKK,MAAN,CACEC,UAAQ,EACRC,MAAM,MAAMC,YAAY,sBAAsBxE,KAAK,OACnDQ,MAAOyF,EAAKxB,SAAU,SAAAC,GAAK,OAAI0F,EAAO1F,EAAMC,OAAOnE,WAIvD,yBAAKkD,MAAO,CAACkB,OAAQ,qBAET,kBAAC,GAAD,CACEuE,OAAO,EACPD,GAAI,uBACJE,SAAS,OACT5I,MAAOA,EACPiE,SAAUsF,EACVrG,MAAO,CAACgF,OAAQ,OAG5B,kBAAC,IAAD,CAAShF,MAAO,CAACkB,OAAQ,iBACzB,kBAACC,EAAA,EAAD,CACEC,OAAK,EAELC,MAAOnD,IAAYoD,QAAQ,MAAMC,QAAS,WA3CpD6D,EAAepG,GAAM,kBAAMP,GAAQ,Y,UC2FxBkI,GA/GF,SAAClK,GACZ2G,EAAS,eAIT,IACMvE,EADS+H,cACI/H,IAAI0F,QAAQ,IAAK,OANd,EAQE7F,mBAAS,KARX,mBAQfwG,EARe,KAQT2B,EARS,OH2BC,SAAChI,EAAK0D,GAAS,IAAD,EAGb7D,mBAAS,IAHI,mBAG9BO,EAH8B,KAGxB6H,EAHwB,OAIPpI,oBAAS,GAJF,mBAI9BK,EAJ8B,KAIrB2E,EAJqB,KA2BrC,OAtBAxG,qBAAU,WACL6B,GACDZ,EAAOwF,IAAP,oBAAwBxE,oBAAU,CAACN,MAAK0D,UACrCnD,MAAK,SAAAC,GAAc,IACVJ,EAASI,EAATJ,KACJA,EAAKK,OACPwH,EAAQ7H,EAAKA,MAEbM,IAAQE,MAAMR,EAAKM,YAGpBG,OAAO,SAAAC,GACVJ,IAAQE,MAAMR,EAAKM,YAElBK,SAAQ,WAAO8D,GAAW,QAI9B,CAAC7E,EAAK0D,EAAKxD,IAIP,CAACE,EAAM6H,EAAS/H,EAAS2E,GG7CaqD,CAAUlI,EAAKqG,GATtC,mBASfjG,EATe,KASAF,GATA,WASS2E,EATT,OAWAhF,mBAAS,KAXT,mBAWf6D,EAXe,KAWVyE,EAXU,OAYItI,mBAAS,IAZb,mBAYf5B,EAZe,KAYRuJ,EAZQ,OAcgB3H,oBAAS,GAdzB,mBAcfuI,EAde,KAcFC,EAdE,OAuBDC,cAJD,SAACjC,GACnBxB,GAAW,KAG0C,KAAhD0D,EAvBe,oBA0BtB,OACM,kBAAC5G,EAAA,EAAD,CAAMC,QAAQ,QAAQT,MAAO,CAAC+E,UAAW,GAAIC,OAAQ,SACnD,kBAACxE,EAAA,EAAKyE,OAAN,CAAahF,MAAO,IACpB,kBAACO,EAAA,EAAKyE,OAAN,CAAahF,MAAO,IAClB,kBAACU,EAAA,EAAD,CACES,OAAK,EACLrC,QAASA,EACTjC,MAAOoI,EACPnE,SAAU,SAAAC,GAAK,OAAI6F,EAAQ7F,EAAMC,OAAOnE,QAAUsK,KAClDtF,KAAM,kBAACD,EAAA,EAAD,CAAMlD,KAAK,SAAS+D,UAAQ,EAAC2E,MAAI,EAAC9F,QAAS,kBAAMmC,GAAW,MAClE5C,YAAY,cAGd,kBAACN,EAAA,EAAD,CAAMC,QAAQ,QAAQT,MAAO,CAAC+E,UAAW,GAAIC,OAAQ,QAASsC,SAAO,GACnE,kBAAC9G,EAAA,EAAKyE,OAAN,CAAahF,MAAO,GAClB,kBAAC,IAAD,CAAQE,GAAG,MAAX,WAEE,yBAAKH,MAAO,CAACmD,MAAO,QAAS9B,MAAO,mBAApC,iBAEE,uBAAGE,QAAS,kBAAM2F,GAAe,KAAjC,WAGJ,kBAACK,EAAA,EAAD,CAAMC,WAAS,EAACC,cAAc,SAASjD,KAAK,OAAOzF,QAASA,GAExDE,EAAKoD,KAAI,SAAAqF,GAAC,OAAK,kBAACH,EAAA,EAAKtF,KAAN,CAAWM,IAAKmF,EAAEnF,IAAKhB,QAAS,WAC7CyF,EAAOU,EAAEnF,KACT8D,EAAS,MACTsB,YAAW,kBAAMtB,EAASqB,EAAE5K,SAAQ,OAEpC,kBAACyK,EAAA,EAAKK,QAAN,KACE,kBAACL,EAAA,EAAK3E,OAAN,KAAc8E,EAAEnF,YAO1B,kBAAC/B,EAAA,EAAKyE,OAAN,CAAahF,MAAO,IAElB,kBAAC,IAAD,CAAQE,GAAG,MAAX,gBAA+BoC,EAG7B,yBAAKvC,MAAO,CAACmD,MAAO,QAAS9B,MAAO,mBAClC,uBACQrB,MAAO,CAAC6H,YAAa,IACrBtG,QAAS,kBAAM6D,EAAe,CAAC7C,MAAKzF,QAAO+B,QAAM,kBAAM6E,GAAW,QAF1E,UADF,gCAOE,uBAEEnC,QAAS,kBAAa,MAAPgB,EHpBJ,SAACtD,EAAM2F,GAEtCzG,EAAO0G,OAAP,sBAA6B1F,oBAAUF,IAASE,oBAAUF,IACvDG,MAAK,SAAAC,GAAa,IACVJ,EAAQI,EAARJ,KACHA,EAAKK,QACPC,IAAQC,QAAQ,wBAChBoF,GAAYA,KAEZrF,IAAQE,MAAMR,EAAKM,YAGpBG,OAAM,SAAAC,GACTJ,IAAQE,MAAMR,EAAKM,YAElBK,SAAQ,eGMakI,CAAkB,CAACvF,MAAKzF,QAAO+B,QAC/BU,IAAQE,MAAM,iBAJpB,YAYQ,OAAV3C,GACA,kBAAC,GAAD,CACE2I,OAAO,EACPD,GAAI,uBACJE,SAAS,OACT5I,MAAOA,EACPiE,SAAUsF,EACVrG,MAAO,CAACgF,OAAQ,UAS1B,kBAACxE,EAAA,EAAKyE,OAAN,CAAahF,MAAO,IAEnBgH,GAAe,kBAAC,GAAD,CAASpI,IAAKA,EAAKL,KAAMyI,EAAaxI,QAASyI,M,mMClHzE,IAAMa,GAASjK,IAAOkK,KAAV,MAwBGC,GAjBH,WAEV,OACE,kBAAC,IAAMrK,SAAP,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAACmK,GAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO7C,KAAK,YAAYC,UAAWL,EAAU/B,OAAO,IACpD,kBAAC,IAAD,CAAOmC,KAAK,aAAaC,UAAWwB,GAAM5D,OAAO,QCbvCmF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,qoFCVN,IAmFeC,GAnFMC,YAAH,M,04DCAlB,IAAMC,GAAcD,YAAH,MAkFFC,IAlBY3K,IAAO4K,KAAV,MAIS5K,IAAO4K,KAAV,MAcfD,I,OC1EfE,IAASC,OACP,kBAAC,EAAD,KACE,kBAAC,GAAD,MAAc,kBAAC,GAAD,MACd,kBAAC,IAAD,KACE,kBAAC,GAAD,QAGFzL,SAAS0L,eAAe,SH4GtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5J,MAAK,SAAA6J,GACjCA,EAAaC,kB","file":"static/js/main.4406de0a.chunk.js","sourcesContent":["import React, {createContext, useReducer} from 'react';\nimport {THEME} from \"../constants\";\n\n\nexport const defaultValue = {\n\n    // 主题色\n    theme: localStorage.getItem(THEME) ? localStorage.getItem(THEME) : 'violet',\n    breadcrumb: [],\n    title: 'HomePage',\n};\n\nexport const GlobalStore = createContext(defaultValue);\n\nconst reducer = (state, action) => {\n\n    switch(action.type) {\n        case 'theme':\n            return {...state, theme: action.payload};\n\n        case 'title':\n            return {...state, title: action.payload};\n        default:\n            return {...state, ...action.payload}\n    }\n}\n\n\nconst StoreProvider = props => {\n    const [store, dispatch] = useReducer(reducer, defaultValue);\n    return (\n        <GlobalStore.Provider value={{...store, dispatch}}>\n            {props.children}\n        </GlobalStore.Provider>\n    );\n};\nexport default StoreProvider;\n","\nexport const TOKEN = 'token';\n\nexport const THEME = 'theme';\n","/*\n* @file theme.jsx\n* @description〈一句话功能简述〉\n* @author jansora\n* @date 2019-12-17 10:39\n*/\nimport React, {useContext, useEffect} from 'react';\nimport {THEME} from \"../../constants\";\nimport {GlobalStore} from \"../../store/global\";\n\nconst ToggleTheme = () => {\n\n  const { theme } = useContext(GlobalStore);\n\n  useEffect(() => {\n    document.body.classList.forEach(\n      cur => document.body.classList.remove([cur]))\n\n    document.body.classList.add(theme);\n    localStorage.setItem(THEME, theme)\n  }, [theme]);\n\n  return null\n}\nexport default ToggleTheme;\n","/*\n* @file index.jsx\n* @description〈一句话功能简述〉\n* @author jansora\n* @date 2019-12-18 15:56\n*/\nimport React from 'react';\nimport ToggleTheme from \"./ToggleTheme\";\n\n\nconst Hooks = () => {\n  return (\n    <React.Fragment>\n      <ToggleTheme/>\n    </React.Fragment>\n  )\n}\nexport default Hooks;\n","/*\n* @file header.jsx\n* @author jansora\n* @date 2020/2/4\n*/\n\n\n/*\n* @file header.jsx\n* @description〈一句话功能简述〉\n* @author jansora\n* @date 2020-02-04 10:21\n*/\n\nimport styled from \"styled-components\";\n\nexport const StyledHeader = styled.header`\n  position: fixed;\n  top: 0;\n  left: 0;\n  //width: 100vw;\n  //background: white;\n  z-index: 1000;\n  background: ${props => props.bootstrap ? \"none\" : \"white\" };\n  height: ${props => props.bootstrap ? \"100px\" : \"var(--header-height)\" };\n  width: ${props => props.bootstrap ? \"1200px\" : \"100vw\" };\n  margin-left: ${props => props.bootstrap ? \"calc((100vw - 1200px) / 2)\" : \"0\" };\n  //margin: 0 auto;\n  padding: 0 16px;\n  box-shadow: ${props => props.bootstrap ? \"none\" : \"0 0 8px 0 rgba(0,0,0,.1)\" };\n  line-height: var(--header-height);\n  a {\n      color: ${props => props.bootstrap ? \"white\" : \"rgba(0,0,0,.87)\" };\n  }\n\n  >div.left {\n    width: 400px;\n    height: ${props => props.bootstrap ? \"100px\" : \"var(--header-height)\" };\n    a.ui.header {\n      color: ${props => props.bootstrap ? \"white\" : \"rgba(0,0,0,.87)\" };\n    }\n    line-height: ${props => props.bootstrap ? \"100px\" : \"var(--header-height)\" };\n     i: hover {\n        color: var(--primary-color);\n      }\n      div.ui.breadcrumb {\n        display: inline-block;\n        line-height: var(--header-height);\n        margin: 0 0 5px 5px !important;\n        a{\n          color: #363636 !important; \n        }\n        div.section.active {\n           a{\n           color: var(--primary-color) !important;\n          }\n        }\n      }\n  }\n  >div.middle {\n    flex: 1 1 auto;\n    display: flex;\n    justify-content: center;\n  }\n  >div.right {\n    width: 400px;\n    a {\n      //width: 100px;\n    }\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n  }\n  display: flex;\n  align-items: center;\n  \n  transition: width 1000ms, height 1000ms, margin-left 1000ms;\n`;\n\n\nexport const StyledHeaderLeft = styled.div`\n  float: left;\n \n\n    \n  \n    //margin-bottom: 5px !important;\n    \n  }\n`;\n\n\nexport const StyledHeaderRight = styled.div`\n  float: right;\n  a {\n    line-height: 50px;\n  }\n  i {\n  font-size: 16px !important;\n    color: var(--primary-color);\n  }\n  span.ant-avatar.ant-avatar-circle{\n    background: var(--primary-color);\n    margin-top: -4px;\n    span.ant-avatar-string {\n        color: white;\n    }\n  }\n`;\n\n\nexport const StyledProductsWrapper = styled.div`\n  width: 320px;\n  padding: 16px;\n  \n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n`;\n\nexport const StyledProductsItem = styled.div`\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    justify-content: center;\n\n    height: 92px;\n    width: 92px;\n    margin-top: 4px;\n    transition: margin-top 218ms ease-in-out;\n    a {\n    \n        display: flex;\n        cursor: pointer;\n\n          height: 50px;\n          width: 50px;\n          i {\n            font-size: 40px;\n          } \n    }\n    span {\n        margin-bottom: 10px;\n    }\n    &:hover {\n      margin-top: 0;\n    }\n    \n`;\n\n\n","/*\n* @file GetTheme.jsx\n* @description〈一句话功能简述〉\n* @author jansora\n* @date 2020-01-16 15:23\n*/\nimport { useContext } from 'react';\nimport {GlobalStore} from \"../../store/global\";\n\nconst GetTheme = () => {\n\n  const { theme } = useContext(GlobalStore);\n  return theme;\n}\nexport default GetTheme;\n","import axios from \"axios\";\n\nexport const client = axios.create(\n  {\n    baseURL: \"/v1/\",\n  }\n);\n","/*\n* @file addTopic.jsx\n* @description〈一句话功能简述〉\n* @author jansora\n\n*/\nimport React, {useState} from 'react';\n\n\nimport {Button, Form, Grid, GridColumn, Header, Modal} from \"semantic-ui-react\";\n\nimport GetTheme from \"../hooks/GetTheme\";\n\n\nimport {AddInstanceRequest} from \"../../request/instance\";\nimport {Divider} from \"antd\";\n\nconst AddInstance = (props) => {\n\n  const {open, setOpen} = props;\n\n  const [name, setName] = useState(null);\n\n  const [uri, setUri] = useState(null);\n\n  const [loading, setLoading] = useState(null);\n\n\n  const args = {\n    name, uri\n  };\n\n  const add = () => {\n    AddInstanceRequest(args, setOpen)\n  };\n\n\n\n  return (\n\n      <Modal\n        open={open}\n        onClose={() => setOpen(false)}\n        style={{width: \"350px\"}}\n        dimmer=\"inverted\"\n      >\n        <Header as='h3' attached='top' textAlign=\"center\">\nAdd Etcd Node\n        </Header>\n\n            <Form style={{padding: \"1rem\"}} loading={loading}>\n              <Grid columns=\"equal\">\n                <GridColumn width={16}>\n              <Form.Input\n                  required\n                  label='title' placeholder='please input etcd name' type='text'\n                  value={name} onChange={event => setName(event.target.value)}/>\n              <Form.Input label=\"connect url\" placeholder=\"please input connect url, such as http://127.0.0.1:2379 ?\"\n                          value={uri} onChange={event => setUri(event.target.value)}/>\n                </GridColumn>\n              </Grid>\n              <Divider style={{margin: '20px 0 12px 0'}}/>\n\n              <Button\n                    fluid\n                    // style={{ height: 114, marginTop: 19, width: '100%'}}\n                    color={GetTheme()} content='Add' onClick={() => add()}\n                />\n\n            </Form>\n\n      </Modal>\n\n  )\n}\nexport default AddInstance;\n","/*\n* @file instance.jsx\n* @author jansora\n* @date 2020/2/16\n*/\n\n\n/*\n* @file instance.jsx\n* @author jansora\n* @date 2020/2/5\n*/\n\n\nimport {useEffect, useState} from \"react\";\nimport {client} from \"./index\";\nimport {message} from \"antd\";\nimport {stringify} from \"qs\"\n\n\nexport const AddInstanceRequest = (data, setOpen) => {\n\n  client.post('instance/insert', stringify(data))\n    .then(response =>  {\n      const { data } = response;\n      if (data.status){\n        message.success(\"added successfully\")\n        // setInstance(data.data)\n        setOpen(false)\n      } else {\n        message.error(data.message)\n      }\n\n    }).catch( e => {\n  }).finally(()=> {\n  })\n\n\n  return null;\n};\n\nexport const UpdateInstanceRequest = (data, setOpen, setInstance) => {\n\n  client.post('instance/update', stringify(data))\n    .then(response =>  {\n      const { data } = response;\n      if (data.status){\n        message.success(\"updated successfully\");\n        setInstance && setInstance(data.data)\n        setOpen && setOpen(false)\n      } else {\n        message.error(data.message)\n      }\n\n    }).catch( e => {\n  }).finally(()=> {\n  })\n\n\n  return null;\n};\n\n\n\nexport const FindAllInstances = () => {\n\n  const [instances, setInstances] = useState([]);\n  const [total, setTotal] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if(loading) {\n      client.get(`instance/findAll`).then(response => {\n        const {data} = response;\n        if (data.status) {\n          setTotal(data.total)\n          setInstances(data.data);\n          message.success(`total ${data.data.length} nodes.`)\n        } else {\n          message.error(data.message);\n        }\n      }).finally();\n    }\n  }, [loading])\n\n  return [instances, total, loading, setLoading];\n};\nexport const DeleteInstanceRequest = (instance, callback) => {\n\n  client.delete(`instance/delete/${instance}`)\n    .then(response => {\n      const {data} = response;\n      if (data.status) {\n        message.success(\"deleted successfully\")\n        callback && callback()\n      } else {\n        message.error(data.message)\n      }\n\n    }).catch(e => {\n  }).finally(() => {\n\n  })\n}\n","/*\n* @file add.jsx\n* @description〈一句话功能简述〉\n* @author jansora\n* @date 2020-08-13 17:07\n*/\nimport React, {useState} from 'react';\nimport {Dropdown, Icon} from \"semantic-ui-react\";\nimport AddInstance from \"../../component/instance/AddInstance\";\n\nconst Add = () => {\n\n  const [openNewInstance, setOpenNewInstance] = useState(false);\n\n  return (\n    <React.Fragment>\n      <Dropdown\n\n        trigger={\n          <Icon\n            title='Add'\n            name='add circle'\n            style={{margin: 0}}\n          />\n        }\n        icon={null}\n        pointing='top left'\n      >\n        <Dropdown.Menu >\n          <Dropdown.Item onClick={() => setOpenNewInstance(true)}\n                         icon='folder open' text='Add Nodes' />\n\n        </Dropdown.Menu>\n      </Dropdown>\n      {openNewInstance && <AddInstance open={openNewInstance} setOpen={setOpenNewInstance} />}\n\n    </React.Fragment>\n  )\n}\nexport default Add;\n","/*\n* @file theme.jsx\n* @description〈一句话功能简述〉\n* @author jansora\n* @date 2019-12-17 11:36\n*/\nimport React, {useContext} from 'react';\nimport {Dropdown, Icon} from \"semantic-ui-react\";\nimport {GlobalStore} from \"../store/global\";\n\nconst Theme = () => {\n\n  const { dispatch } = useContext(GlobalStore);\n  const toggle = theme =>  dispatch({ type: 'theme', payload: theme });\n\n  const themes = [\n    {color:'red', description:'Red'},\n    {color:'orange', description:'orange'},\n    {color:'yellow', description:'Yellow'},\n    {color:'olive', description:'Olive'},\n    {color:'green', description:'Green'},\n    {color:'blue', description:'Blue'},\n    {color:'violet', description:'Violet'},\n    {color:'purple', description:'Purple'},\n    {color:'pink', description:'Pink'},\n    {color:'brown', description:'Brown'},\n    {color:'grey', description:'Grey'},\n  ]\n\n  return (\n    <Dropdown\n      trigger={\n        <Icon\n          name='gem'\n          title='主题'\n          style={{margin: 0}}\n        />\n      }\n      icon={null}\n      pointing='top right'\n    >\n      <Dropdown.Menu>\n        {\n          themes.map(_theme => <Dropdown.Item\n              key={_theme.color}\n              text={_theme.description}\n              onMouseEnter={() => toggle(_theme.color)}\n              label={ { color: _theme.color, empty: true, circular: true }}\n            />\n          )\n        }\n      </Dropdown.Menu>\n    </Dropdown>\n  )\n}\nexport default Theme;\n","/*\n* @file GetUser.jsx\n* @description〈一句话功能简述〉\n* @author jansora\n* @date 2020-01-16 15:23\n*/\nimport { useContext } from 'react';\nimport {GlobalStore} from \"../../store/global\";\n\nconst GetTitle = () => {\n\n  const { title } = useContext(GlobalStore);\n  return title;\n}\nexport default GetTitle;\n","/*\n* @file header.jsx\n* @author jansora\n* @date 2020/2/4\n*/\n\n\nimport React from \"react\";\nimport {StyledHeader, StyledHeaderLeft} from \"../styled/header\";\nimport {Header as Head, Icon} from \"semantic-ui-react\";\nimport Add from \"./add\";\nimport Help from \"./help\";\nimport {Divider} from \"antd\";\n\nimport {NavLink, Link} from \"react-router-dom\";\nimport Theme from \"./theme\";\nimport GetTitle from \"../component/hooks/GetTitle\";\n\nconst Header = (props) => {\n\n  const title = GetTitle();\n\n    return (\n        <StyledHeader>\n\n          <div className=\"left\">\n            <NavLink to=\"/instance\" exact={true}>Etcd Nodes</NavLink>\n            <Divider type=\"vertical\" style={{margin: '0 10px'}}/>\n            <NavLink to=\"/data\" exact={false} disabled>Data Manage</NavLink>\n          </div>\n          <div className=\"middle\">\n\n              <Head>{title}</Head>\n\n          </div>\n          <div className=\"right\">\n\n\n                <Divider type=\"vertical\" style={{margin: '0 16px 0 50px'}}/>\n\n                <Add/>\n                <Divider type=\"vertical\" style={{margin: '0 16px'}}/>\n\n                <Theme/>\n\n                <Divider type=\"vertical\" style={{margin: '0 16px'}}/>\n\n            <a target=\"_blank\" rel='noopener noreferrer'\n               href={\"https://github.com/Jansora/EtcdUI\"}\n               style={{float: \"right\"}}>\n              <Icon name=\"github\" />\n            </a>\n          </div>\n\n        </StyledHeader>\n    )\n}\n\nexport default Header;\n","/*\n* @file SetTitle.jsx\n* @description〈一句话功能简述〉\n* @author jansora\n* @date 2019-12-26 16:16\n*/\n\nimport {useContext, useEffect} from \"react\";\nimport {GlobalStore} from \"../../store/global\";\n\nconst SetTitle = (title) => {\n\n    document.title = `${title ? title + ' - ' : ''} 张洋源的小窝`\n\n    const {dispatch} = useContext(GlobalStore);\n\n\n    useEffect(() => {\n        const payload = title;\n        dispatch({ type: 'title', payload });\n    },[dispatch, title]);\n};\nexport default SetTitle;\n","/*\n* @file instances.jsx\n* @author index\n* @date 2020/08/13\n*/\n\n\nimport React from \"react\";\nimport {Grid, Table, Icon, Header, Button} from \"semantic-ui-react\";\nimport SetTitle from \"../../component/hooks/SetTitle\";\nimport {FindAllInstances, DeleteInstanceRequest} from \"../../request/instance\";\nimport {Link} from \"react-router-dom\";\nimport GetTheme from \"../../component/hooks/GetTheme\";\n\nconst Instances = (props) => {\n\n    SetTitle(\"Etcd Node List\")\n\n    const [instances, total, loading, setLoading] = FindAllInstances();\n\n\n    return (\n        <Grid >\n          <Table celled striped>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell width=\"4\">Name</Table.HeaderCell>\n                <Table.HeaderCell width=\"6\">EndPoint</Table.HeaderCell>\n                <Table.HeaderCell width='3'>Status</Table.HeaderCell>\n                <Table.HeaderCell width='3'>Operation</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n\n            <Table.Body>\n              {\n                instances.map(i =>        <Table.Row>\n                  <Table.Cell collapsing>\n                    <Link to={`/data/${i.value.uri.replace(\"://\", \"_\")}`}>\n                    <Icon name='folder' /> {i.value.name}\n                    </Link>\n                  </Table.Cell>\n                  <Table.Cell>{i.value.uri}</Table.Cell>\n                  <Table.Cell >\n                    10 hours ago\n                  </Table.Cell>\n                  <Table.Cell textAlign='center'>\n                    <Button size=\"tiny\" basic\n                            as={Link} to={`/data/${i.value.uri.replace(\"://\", \"_\")}`}> Manage </Button>\n                    <Button size=\"tiny\" basic color={\"red\"} as=\"a\" onClick={() =>\n                      DeleteInstanceRequest(i.value.uri.replace(\"://\", \"_\"),\n                        () => setLoading(true))\n                    }> Delete </Button>\n                  </Table.Cell>\n                </Table.Row>)\n              }\n            </Table.Body>\n          </Table>\n        </Grid>\n\n    )\n}\n\nexport default Instances;\n","/*\n* @file playground.jsx\n* @author index\n* @date 2020/08/13\n*/\n\n\nimport React from \"react\";\nimport {Grid} from \"semantic-ui-react\";\nimport {Route, Redirect} from 'react-router-dom';\nimport Instances from \"./instances\";\n\nconst Instance = (props) => {\n\n\n    return (\n        <Grid columns=\"equal\" style={{marginTop: 30, height: \"100%\"}}>\n          <Grid.Column width={2}/>\n          <Grid.Column width={12}>\n            <Route path=\"/instance\" component={Instances} exact={true}/>\n\n          </Grid.Column>\n          <Grid.Column width={2}/>\n\n\n        </Grid>\n\n    )\n}\n\nexport default Instance;\n","/*\n* @file data.jsx\n* @author jansora\n* @date 2020/2/16\n*/\n\n\n/*\n* @file data.jsx\n* @author jansora\n* @date 2020/2/5\n*/\n\n\nimport {useEffect, useState} from \"react\";\nimport {client} from \"./index\";\nimport {message, notification} from \"antd\";\nimport {stringify} from \"qs\"\n\n\n\n\n\nexport const AddDataRequest = (node, callback) => {\n\n  client.post('data/insert', stringify(node))\n    .then(response =>  {\n      const { data } = response;\n      if (data.status){\n        message.success(\"saved successfully\")\n        callback && callback()\n      } else {\n        message.error(data.message)\n      }\n\n    }).catch( e => {\n  }).finally(()=> {\n  })\n\n\n  return null;\n};\n\n\n\nexport const FindNodes = (uri, key) => {\n\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(()=> {\n    if(loading) {\n      client.get(`data/find?${stringify({uri, key})}`)\n        .then(response =>  {\n          const { data } = response;\n          if (data.status){\n            setData(data.data)\n          } else {\n            message.error(data.message)\n          }\n\n        }).catch( e => {\n        message.error(data.message)\n\n      }).finally(()=> { setLoading(false)\n      })\n    }\n\n  }, [uri, key, loading]);\n\n\n\n  return [data, setData, loading, setLoading];\n};\n\nexport const DeleteDataRequest = (data, callback) => {\n\n  client.delete(`data/delete?${stringify(data)}`, stringify(data))\n    .then(response => {\n      const {data} = response;\n      if (data.status) {\n        message.success(\"deleted successfully\")\n        callback && callback()\n      } else {\n        message.error(data.message)\n      }\n\n    }).catch(e => {\n    message.error(data.message)\n\n  }).finally(() => {\n\n  })\n}\n","/*\n* @file index.jsx.jsx\n* @author jansora\n* @date 2020/2/12\n*/\n\n\nimport React, {useEffect, useRef, useState} from \"react\";\n\nimport * as monaco from 'monaco-editor/esm/vs/editor/editor.main';\n\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 500px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst CodeEditor = (props) => {\n\n    const {value, onChange, id, force} = props;\n    const language = props.language ? props.language : 'javascript';\n    const ref = useRef(null);\n    const style = props.style ? props.style  : {};\n    const options = props.options ? props.options  : {};\n    const [model, setModel] = useState(monaco.editor.createModel(value, language));\n    const [editor, setEditor] = useState(null);\n\n    useEffect(() => {\n        if(ref.current) {\n\n            setEditor(\n              monaco.editor.create(ref.current, {\n                  model, language, theme: \"vs-dark\", ...options,\n              })\n            )\n\n        }\n    }, [ref, model, language]);\n\n\n    useEffect(() => {\n        if (editor && editor.setModelLanguage) {\n            editor.setModelLanguage(model, language)\n        }\n    }, [editor, language, model])\n\n\n    useEffect(() => {\n\n\n\n        if(editor && force) {\n            model.setValue(value);\n            // model\n\n\n        }\n    }, [value, force, model]);\n\n\n\n\n    useEffect(() => {\n        if(editor) {\n            editor.onDidChangeModelContent((event) => onChange && onChange(model.getValue()))\n        }\n    }, [editor]);\n\n\n    useEffect(()=> {\n        return () => model.dispose()\n    }, [])\n\n    return (\n      <Wrapper id={id ? id : \"monaco\"} ref={ref} style={style} />\n    )\n}\n\nexport default CodeEditor;\n","/*\n* @file addTopic.jsx\n* @description〈一句话功能简述〉\n* @author jansora\n\n*/\nimport React, {useState} from 'react';\n\n\nimport {Button, Form, Grid, GridColumn, Header, Modal, Message} from \"semantic-ui-react\";\n\nimport GetTheme from \"../hooks/GetTheme\";\n\n\nimport {AddDataRequest} from \"../../request/data\";\n\nimport {Divider} from \"antd\";\nimport CodeEditor from \"../code-editor/CodeEditor\";\n\nconst AddData = (props) => {\n\n  const {uri} = props;\n\n\n  const {open, setOpen} = props;\n\n  const [key, setkey] = useState(null);\n\n  const [value, setValue] = useState(\"Input your value here...\");\n\n  const [loading, setLoading] = useState(null);\n\n\n  const args = {\n    key, value, uri\n  };\n\n  const add = () => {\n    AddDataRequest(args, () => setOpen(false))\n\n  };\n\n\n\n  return (\n\n      <Modal\n        open={open}\n        onClose={() => setOpen(false)}\n        style={{width: \"1000px\"}}\n        dimmer=\"inverted\"\n      >\n        <Header as='h3' attached='top' textAlign=\"center\">\n          Add Data\n        </Header>\n\n\n\n          <Form style={{padding: \"1rem\"}} loading={loading}>\n            <Form.Input\n              required\n              label='key' placeholder='input your key Here' type='text'\n              value={key} onChange={event => setkey(event.target.value)}\n            />\n          </Form>\n\n          <div style={{margin: \"0 14px 10px 14px\"}}>\n                    {\n                      <CodeEditor\n                        force={false}\n                        id={\"code-editor-template\"}\n                        language=\"text\"\n                        value={value}\n                        onChange={setValue}\n                        style={{height: 450}}\n                      />\n                    }\n            <Divider style={{margin: '8px 0 8px 0'}}/>\n            <Button\n              fluid\n              // style={{ height: 114, marginTop: 19, width: '100%'}}\n              color={GetTheme()} content='add' onClick={() => add()}\n            />\n          </div>\n\n\n\n\n\n      </Modal>\n\n  )\n}\nexport default AddData;\n","/*\n* @file index.jsx\n* @author index\n* @date 2020/08/14\n*/\n\n\nimport React, {useState} from \"react\";\nimport {Grid, Header, Icon, Input, List} from \"semantic-ui-react\";\nimport {useParams} from 'react-router-dom';\nimport {AddDataRequest, DeleteDataRequest, FindNodes} from \"../../request/data\";\nimport SetTitle from \"../../component/hooks/SetTitle\";\nimport CodeEditor from \"../../component/code-editor/CodeEditor\";\nimport AddData from \"../../component/data/AddData\";\nimport {useDebouncedCallback} from \"use-debounce\";\nimport {message} from \"antd\";\n\n\nconst Data = (props) => {\n  SetTitle(`Data Manage`)\n\n\n\n  const params = useParams()\n  const uri = params.uri.replace(\"_\", \"://\");\n\n  const [path, setPath] = useState(\"/\");\n  const [data, setData, loading, setLoading] = FindNodes(uri, path);\n\n  const [key, setKey] = useState(\"/\");\n  const [value, setValue] = useState(\"\")\n\n  const [openNewData, setOpenNewData] = useState(false)\n\n\n\n\n  const autoSearch_ = (path) => {\n    setLoading(true)\n  }\n\n  const [autoSearch] = useDebouncedCallback(autoSearch_, 1000);\n\n\n  return (\n        <Grid columns=\"equal\" style={{marginTop: 30, height: \"100%\"}}>\n          <Grid.Column width={2}/>\n          <Grid.Column width={12}>\n            <Input\n              fluid\n              loading={loading}\n              value={path}\n              onChange={event => setPath(event.target.value) || autoSearch()}\n              icon={<Icon name='search' circular link onClick={() => setLoading(true)} />}\n              placeholder='Search...'\n            />\n\n            <Grid columns=\"equal\" style={{marginTop: 30, height: \"100%\"}} divided>\n              <Grid.Column width={4} >\n                <Header as=\"h4\" >\n                  Hit Keys\n                  <div style={{float: \"right\", color: \"rgba(0,0,0,.4)\"}}>\n                    Not Found? Add\n                    <a onClick={() => setOpenNewData(true)} > here</a>\n                  </div>\n                </Header>\n                <List selection verticalAlign='middle' size=\"mini\" loading={loading}>\n                  {\n                    data.map(d =>  <List.Item key={d.key} onClick={() => {\n                      setKey(d.key)\n                      setValue(null)\n                      setTimeout(() => setValue(d.value), 100)\n                    }}>\n                      <List.Content>\n                        <List.Header>{d.key}</List.Header>\n                      </List.Content>\n                    </List.Item>)\n                  }\n                </List>\n              </Grid.Column>\n\n              <Grid.Column width={12}>\n\n                <Header as=\"h4\" >Current Key: {key}\n\n\n                  <div style={{float: \"right\", color: \"rgba(0,0,0,.4)\"}}>\n                    <a\n                            style={{marginRight: 10}}\n                            onClick={() => AddDataRequest({key, value, uri}, () => setLoading(true))}\n                            > Save </a>\n\n                    Needn't this data?  delete id\n                    <a\n\n                      onClick={() => key != null\n                        ? DeleteDataRequest({key, value, uri})\n                        : message.error(\"key is null\")\n                      } > here </a>\n\n                  </div>\n\n                </Header>\n\n                {\n                  value !== null &&\n                  <CodeEditor\n                    force={false}\n                    id={\"code-editor-template\"}\n                    language=\"text\"\n                    value={value}\n                    onChange={setValue}\n                    style={{height: 600}}\n                  />\n                }\n\n\n              </Grid.Column>\n\n            </Grid>\n          </Grid.Column>\n          <Grid.Column width={2}/>\n\n          {openNewData && <AddData uri={uri} open={openNewData} setOpen={setOpenNewData} />}\n        </Grid>\n\n    )\n}\n\nexport default Data;\n","import React from 'react';\n\nimport {Route, Switch} from 'react-router-dom'\nimport Hooks from \"./component/hooks\";\nimport Header from \"./layout/header\";\nimport styled from \"styled-components\";\nimport Instance from \"./layout/instance\";\nimport Data from \"./layout/data\";\n\nconst Layout = styled.main`\n  padding-top: var(--header-height);\n  height: calc(100% - var(--header-height));\n  //width: 100%;\n  margin: 0 50px;;\n`;\n\nconst App = () => {\n\n  return (\n    <React.Fragment>\n      <Hooks/>\n      <Header/>\n      <Layout >\n        <Switch>\n          <Route path=\"/instance\" component={Instance} exact={false}/>\n          <Route path=\"/data/:uri\" component={Data} exact={false}/>\n        </Switch>\n      </Layout>\n\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/*\n* @file GlobalColors.jsx\n* @description〈一句话功能简述〉\n* @author jansora\n* @date 2020-02-04 10:21\n*/\nimport {createGlobalStyle} from \"styled-components\";\n\nconst GlobalColors = createGlobalStyle`\n\n  body{\n    --primary-color: #3f51b5;\n    --primary-active-color: #5FA95E;\n    --header-height: 48px;\n  }\n\n  .red {\n    // 整体主题色配置\n    --primary-color: #db2828;\n    --active-backgroud-color: rgba(219, 40, 40, .08);\n    --hover-backgroud-color: rgba(219, 40, 40, .1);\n  }\n  .orange {\n    // 整体主题色配置\n    --primary-color: #f2711c;\n    --active-backgroud-color: rgba(242, 113, 28, .08);\n    --hover-backgroud-color: rgba(242, 113, 28, .1);\n  }\n  .yellow {\n    // 整体主题色配置\n    --primary-color: #fbbd08;\n    --active-backgroud-color: rgba(251, 189, 8, .08);\n    --hover-backgroud-color: rgba(251, 189, 8, .1);\n  }\n  .olive {\n    // 整体主题色配置\n    --primary-color: #b5cc18;\n    --active-backgroud-color: rgba(181, 204, 24, .08);\n    --hover-backgroud-color: rgba(181, 204, 24, .1);\n  }\n  .green {\n    // 整体主题色配置\n    --primary-color: #21ba45;\n    --active-backgroud-color: rgba(33, 186, 69, .08);\n    --hover-backgroud-color: rgba(33, 186, 69, .1);\n  }\n  .teal {\n    // 整体主题色配置\n    --primary-color: #00b5ad;\n    --active-backgroud-color: rgba(0, 181, 173, .08);\n    --hover-backgroud-color: rgba(0, 181, 173, .1);\n  }\n  .blue {\n    // 整体主题色配置\n    --primary-color: #2185d0;\n    --active-backgroud-color: rgba(33, 133, 208, .08);\n    --hover-backgroud-color: rgba(33, 133, 208, .1);\n  }\n  \n  .violet {\n    // 整体主题色配置\n    --primary-color: #6435c9;\n    --active-backgroud-color: rgba(100, 53, 201, .08);\n    --hover-backgroud-color: rgba(100, 53, 201, .1);\n  }\n  .purple {\n    // 整体主题色配置\n    --primary-color: #a333c8;\n    --active-backgroud-color: rgba(163, 51, 200, .08);\n    --hover-backgroud-color: rgba(163, 51, 200, .1);\n  }\n  .pink {\n    // 整体主题色配置\n    --primary-color: #e03997;\n    --active-backgroud-color: rgba(224, 57, 151, .08);\n    --hover-backgroud-color: rgba(224, 57, 151, .1);\n  }\n  .brown {\n    // 整体主题色配置\n    --primary-color: #a5673f;\n    --active-backgroud-color: rgba(165, 103, 63, .08);\n    --hover-backgroud-color: rgba(165, 103, 63, .1);\n  }\n  .grey {\n    // 整体主题色配置\n    --primary-color: #767676;\n    --active-backgroud-color: rgba(118, 118, 118, .08);\n    --hover-backgroud-color:rgba(118, 118, 118, .1);\n  }\n\n`;\nexport default GlobalColors;\n","/*\n* @file GlobalStyles.jsx\n* @description〈一句话功能简述〉\n* @author jansora\n* @date 2020-02-04 10:21\n*/\nimport styled , {createGlobalStyle} from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n    body{\n     \n      height: 100vh;\n      width: 100vw;\n      margin: 0;\n      overflow: auto;\n      overflow-x: hidden;\n      //width: 100%;\n      // overflow: hidden;\n      scroll-behavior: smooth;\n      color: #595959;\n      font-family: Chinese Quote,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,PingFang SC,Hiragino Sans GB,Microsoft YaHei,Helvetica Neue,Helvetica,Arial,sans-serif;\n      a{\n        //color: var(--primary-color);\n        color: rgba(0,0,0, 0.87);\n        text-decoration: none !important;\n      }\n      a:hover, a:checked, a:active{\n          color: var(--primary-color);\n\n        //color: var(--primary-active-color);\n      }\n      ::selection {\n        background-color: var(--primary-color);\n        color: white;\n      }\n      //p, span, a {\n      //  color: #383838;\n      //}\n    }\n\n    ::-webkit-scrollbar {\n      width: 6px;\n      height: 5px;\n      border: 3px;\n    }\n    ::-webkit-scrollbar-thumb {\n      width:6px;\n      background-color: var(--primary-color) !important;\n      -webkit-border-radius: 2px;\n      outline: 1px solid  var(--primary-color);\n      outline-offset: -2px;\n      border: 3px solid  var(--primary-color);\n    }\n    ::-webkit-scrollbar-track {\n      display: none;\n    }\n\n    body::-webkit-scrollbar {\n        //display: none;\n\n    }\n    \n    #root {\n      height: 100%;\n      width: 100%;\n    }\n    .active {\n      color: var(--primary-color) !important;\n    }\n\n`;\n\nexport const PrimarySpan = styled.span`\n   color: var(--primary-color);\n`\n\nexport const StyledDescription = styled.span`\n  color: grey;\n  font-size: .75rem;\n  height: 20px;\n  line-height: 20px;\n  margin: 4px 16px 12px;\n  opacity: .9;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`\n\n\n\nexport default GlobalStyle;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {BrowserRouter} from 'react-router-dom';\n\nimport StoreProvider from \"./store/global\";\n\nimport GlobalColors from \"./styled/GlobalColors\";\nimport GlobalStyle from \"./styled/GlobalStyles\";\n\nimport 'antd/dist/antd.min.css'\n\n\nReactDOM.render(\n  <StoreProvider>\n    <GlobalStyle/><GlobalColors/>\n    <BrowserRouter>\n      <App/>\n    </BrowserRouter>\n  </StoreProvider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.register();\nserviceWorker.unregister();\n"],"sourceRoot":""}